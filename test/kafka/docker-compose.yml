version: "3.7"
services:
  zookeeper:
    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
    hostname: zookeeper
    command: zookeeper-server-start
    networks:
      - net
    environment:
      - KAFKA_SERVER_ID=1
      - KAFKA_clientPort=2181
      - KAFKA_dataDir=/tmp/zookeeper
      - KAFKA_tickTime=2000
      - KAFKA_4lw_commands_whitelist=stat, ruok, conf, isro
      - KAFKA_OPTS=-Xms128m -Xmx128m
    healthcheck:
      test: test `echo "ruok" | nc localhost 2181 | grep "imok"`
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s


  create-admin-user:
    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
    depends_on:
      - zookeeper
    entrypoint: "kafka-configs --zookeeper zookeeper:2181 --alter --add-config SCRAM-SHA-512='[password=admin-secret]' --entity-type users --entity-name admin"
    restart: on-failure
    networks:
      - net

  kafka:
    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
    hostname: kafka
    command: kafka-server-start
    networks:
      - net
    depends_on:
      - zookeeper
    environment:
      - KAFKA_broker_id=101
      - KAFKA_zookeeper_connect=zookeeper:2181
      - KAFKA_advertised_listeners=SECURE://kafka:9092
      - KAFKA_listener_security_protocol_map=SECURE:SASL_PLAINTEXT
      - KAFKA_listeners=SECURE://:9092
      - KAFKA_sasl_enabled_mechanisms=SCRAM-SHA-512
      - KAFKA_sasl_mechanism_inter_broker_protocol=SCRAM-SHA-512
      - KAFKA_inter_broker_listener_name=SECURE
      - "KAFKA_listener_name_secure_scram-sha-512_sasl_jaas_config=org.apache.kafka.common.security.scram.ScramLoginModule required username=admin password=admin-secret;"
      - KAFKA_auto_create_topics_enable=true
      - KAFKA_delete_topic_enable=true
      - KAFKA_offsets_topic_replication_factor=1
      - KAFKA_confluent_topic_replication_factor=1
      - KAFKA_OPTS=-Xms256m -Xmx256m
      - KAFKA_authorizer_class_name=kafka.security.authorizer.AclAuthorizer
      - KAFKA_super_users=User:admin
    restart: on-failure
    healthcheck:
      test: nc -z localhost 9092
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s

  create-users-and-acls:
    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
    depends_on:
      - kafka
    entrypoint: "/create-user-acl.sh"
    volumes:
      - ./create-user-acl.sh:/create-user-acl.sh:ro
      - ./admin.config:/admin.config:ro
    restart: on-failure
    networks:
      - net

#  kafka-connect:
#    image: "ianitrix/kafka:${CONFLUENT_VERSION}"
#    command: connect-distributed
#    hostname: kafka-connect
#    ports:
#      - 8083:8083
#    networks:
#      - confluent 
#    healthcheck:
#      test: test `curl -s -o /dev/null -w "%{http_code}" http://localhost:8083/connectors` = 200
#      interval: 2s
#      timeout: 2s
#      retries: 10
#      start_period: 2s
#    environment:
#      - KAFKA_OPTS=-Xms512m -Xmx512m
#      - KAFKA_bootstrap_servers=kafka:9092
#      - KAFKA_rest_port=8083
#      - KAFKA_group_id=connect
#      - KAFKA_config_storage_topic=_connect-config
#      - KAFKA_offset_storage_topic=_connect-offsets
#      - KAFKA_status_storage_topic=_connect-status
#      - KAFKA_replication_factor=1
#      - KAFKA_config_storage_replication_factor=1
#      - KAFKA_offset_storage_replication_factor=1
#      - KAFKA_status_storage_replication_factor=1
#      - KAFKA_key_converter=org.apache.kafka.connect.json.JsonConverter
#      - KAFKA_value_converter=org.apache.kafka.connect.json.JsonConverter
#      - KAFKA_key_converter_schemas_enable=false
#      - KAFKA_value_converter_schemas_enable=false
#      - KAFKA_internal_key_converter=org.apache.kafka.connect.json.JsonConverter
#      - KAFKA_internal_value_converter=org.apache.kafka.connect.json.JsonConverter
#      - KAFKA_rest_advertised_host_name=kafka-connect
#      - KAFKA_plugin_path=/confluent-${CONFLUENT_VERSION}/share/java
#      - KAFKA_log4j_root_loglevel=INFO
#      - KAFKA_log4j_loggers=org.reflections=ERROR
#    restart: on-failure


  akhq:
    image: tchiotludo/akhq:${AKHQ_VERSION}
    hostname: akhq
    networks:
      - net
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
                security.protocol: SASL_PLAINTEXT
                sasl.mechanism: SCRAM-SHA-512
                sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";
              connect:
                - name: default
                  url: "http://kafka-connect:8083"


networks:
  net:
    external:    
      name: net
